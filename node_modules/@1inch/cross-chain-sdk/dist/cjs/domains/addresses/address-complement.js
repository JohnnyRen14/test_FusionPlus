"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressComplement = void 0;
const tslib_1 = require("tslib");
const byte_utils_1 = require("@1inch/byte-utils");
const assert_1 = tslib_1.__importDefault(require("assert"));
/**
 * Contains highest bits of address (>UINT_160_MAX) if address is bigger than UINT_160_MAX
 *
 * @see SolanaAddress.splitToParts
 */
class AddressComplement {
    constructor(inner) {
        this.inner = inner;
        (0, assert_1.default)(inner <= byte_utils_1.UINT_160_MAX);
    }
    asHex() {
        const hex = this.inner.toString(16);
        return (0, byte_utils_1.add0x)(hex.length % 2 ? '0' + hex : hex);
    }
    isZero() {
        return this.inner == 0n;
    }
}
exports.AddressComplement = AddressComplement;
AddressComplement.ZERO = new AddressComplement(0n);
//# sourceMappingURL=address-complement.js.map